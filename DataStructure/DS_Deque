### 목차
- [목차](#목차)
- [Deque](#deque)
  - [Deque의 정의](#deque의-정의)
  - [Deque의 구조](#deque의-구조)
  - [Deque의 특징](#deque의-특징)
    - [1. Stakc 및 Queue 모두 사용](#1-stakc-및-queue-모두-사용)
      - [1.1 추가를 제한하는 구조](#11-추가를-제한하는-구조)
    - [1.2 삭제를 제한하는 구조](#12-삭제를-제한하는-구조)
  - [2. 양방향 끝에서 데이터 추가, 삭제 용이](#2-양방향-끝에서-데이터-추가-삭제-용이)
  - [3. 양방향 끝이 아닌 임의의 데이터 추가 및 삭제 불가능](#3-양방향-끝이-아닌-임의의-데이터-추가-및-삭제-불가능)
### Deque
#### Deque의 정의
- Double Ended Queue
  - 양방향 대기열
#### Deque의 구조
- Stack과 Queue가 혼합되어 있음
  - 양방향으로 열려있는 구조
- LIFO, FIFO와 같은 순서에 구속되지 않음
#### Deque의 특징
##### 1. Stakc 및 Queue 모두 사용
- 양쪽으로 데이터 추가 및 삭제 가능
  - Stack과 Queue 구현 가능
###### 1.1 추가를 제한하는 구조
- 한쪽에서만 데이터 추가 가능
- 삭제는 양방향에서 가능
```
---------------------------
-> insert
<- delete         delete ->
---------------------------
```
- 왼쪽으로 삭제 시 Stack의 형태
- 오른쪽으로 삭제 시 Queue의 형태

##### 1.2 삭제를 제한하는 구조
- 양 방향 데이터 추가 가능
- 삭제는 한 방향에서만 가능하게 구현
```
---------------------------
-> insert         insert <-
<- delete
---------------------------
```
- 왼쪽에서 추가 시 Stack의 형태
- 오른쪽에서 추가 시 Queue의 형태

#### 2. 양방향 끝에서 데이터 추가, 삭제 용이
```
 -----
  3    // 3추가
 -----
 L   R

 -----------
  2  |  3    // 왼쪽에 2추가
 -----------
 L         R

 -----------------
  2  |  3  |  4    // 오른쪽에 4추가
 -----------------
 L               R

 -----------------------
  1  |  2  |  3  |  4    // 왼쪽에 1추가
 -----------------------
 L                     R
```

#### 3. 양방향 끝이 아닌 임의의 데이터 추가 및 삭제 불가능
- 양방향 끝의 인덱스 정보를 지님
  - 임의의 인덱스만 추가 및 삭제 불가능
